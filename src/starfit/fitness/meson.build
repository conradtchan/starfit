name = 'fitness'
path = 'starfit' / name
module_name = '_solver'

python_sources = [
    '__init__.py',
    'solver.py',
]

fortran_sources = [
    'typedef.f90',
    'utils.f90',
    'powell.f90',
    'norm.f90',
    'linalg.f90',
    'star_data.f90',
    'abu_data.f90',
    'fitting.f90',
    'solver.f90',
]

py3.install_sources(python_sources, subdir: path)

# A .pyf file is generated by hand following make_pyf.txt
# This means that f2py only needs to see the interface file solver.f90,
# allowing for non-f2py compliant code in the other modules
f2py_wrapper = custom_target(module_name,
    input : ['solver.pyf', '.f2py_f2cmap'],
    output : [module_name + 'module.c'],
    command : [ py3, '-m', 'numpy.f2py', '@INPUT0@',
    '--build-dir', '@OUTDIR@', '--f2cmap', '@INPUT1@'])


py3.extension_module(module_name,
    f2py_wrapper,
    fortran_sources,
    incdir_f2py+'/fortranobject.c',
    include_directories: inc_np,
    dependencies: py3.dependency(),
    install: true,
    subdir: path,
    )
